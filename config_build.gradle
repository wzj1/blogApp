/**
 * 关于整个项目(app/module)的通用gradle配置
 */
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'


    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

//        multiDexEnabled true
        consumerProguardFiles "consumer-rules.pro"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //版本信息相关
        buildConfigField "String", "VERSION_NAME", "" +"\"" + rootProject.ext.android["versionName"] + "\""
        buildConfigField "int", "VERSION_CODE", "" + rootProject.ext.android["versionCode"]


        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    signingConfigs {
        debug {
            keyAlias 'blog'
            keyPassword 'wzj123456'
            storeFile file('../keystore/myblog.jks')
            storePassword 'wzj123456'
        }
        release {
            keyAlias 'blog'
            keyPassword 'wzj123456'
            storeFile file('../keystore/myblog.jks')
            storePassword 'wzj123456'
        }
    }


    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
//            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
//            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }




//不进行代码静态检测
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }



//支持java8
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }


//生成libs目录
    sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }


    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding{
        android.buildFeatures.dataBinding true
    }

    buildFeatures {
        viewBinding = true
    }

    packagingOptions {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }


}


kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    api project(':lib_common')
    kapt rootProject.ext.dependencies["arouter-compiler"]
    kapt rootProject.ext.glide["glide_compiler"]


}